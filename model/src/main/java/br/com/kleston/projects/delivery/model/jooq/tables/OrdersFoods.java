/*
 * This file is generated by jOOQ.
 */
package br.com.kleston.projects.delivery.model.jooq.tables;


import br.com.kleston.projects.delivery.model.jooq.Delivery;
import br.com.kleston.projects.delivery.model.jooq.Indexes;
import br.com.kleston.projects.delivery.model.jooq.Keys;
import br.com.kleston.projects.delivery.model.jooq.tables.records.OrdersFoodsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersFoods extends TableImpl<OrdersFoodsRecord> {

    private static final long serialVersionUID = 456221146;

    /**
     * The reference instance of <code>delivery.orders_foods</code>
     */
    public static final OrdersFoods ORDERS_FOODS = new OrdersFoods();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrdersFoodsRecord> getRecordType() {
        return OrdersFoodsRecord.class;
    }

    /**
     * The column <code>delivery.orders_foods.id</code>.
     */
    public final TableField<OrdersFoodsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>delivery.orders_foods.id_order</code>.
     */
    public final TableField<OrdersFoodsRecord, Long> ID_ORDER = createField("id_order", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>delivery.orders_foods.id_product</code>.
     */
    public final TableField<OrdersFoodsRecord, Long> ID_PRODUCT = createField("id_product", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>delivery.orders_foods</code> table reference
     */
    public OrdersFoods() {
        this(DSL.name("orders_foods"), null);
    }

    /**
     * Create an aliased <code>delivery.orders_foods</code> table reference
     */
    public OrdersFoods(String alias) {
        this(DSL.name(alias), ORDERS_FOODS);
    }

    /**
     * Create an aliased <code>delivery.orders_foods</code> table reference
     */
    public OrdersFoods(Name alias) {
        this(alias, ORDERS_FOODS);
    }

    private OrdersFoods(Name alias, Table<OrdersFoodsRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrdersFoods(Name alias, Table<OrdersFoodsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Delivery.DELIVERY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ORDERS_FOODS_ID_ORDER, Indexes.ORDERS_FOODS_ID_PRODUCT, Indexes.ORDERS_FOODS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OrdersFoodsRecord, Long> getIdentity() {
        return Keys.IDENTITY_ORDERS_FOODS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrdersFoodsRecord> getPrimaryKey() {
        return Keys.KEY_ORDERS_FOODS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrdersFoodsRecord>> getKeys() {
        return Arrays.<UniqueKey<OrdersFoodsRecord>>asList(Keys.KEY_ORDERS_FOODS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OrdersFoodsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OrdersFoodsRecord, ?>>asList(Keys.ORDERS_FOODS_IBFK_1, Keys.ORDERS_FOODS_IBFK_2);
    }

    public Orders orders() {
        return new Orders(this, Keys.ORDERS_FOODS_IBFK_1);
    }

    public Products products() {
        return new Products(this, Keys.ORDERS_FOODS_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersFoods as(String alias) {
        return new OrdersFoods(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersFoods as(Name alias) {
        return new OrdersFoods(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrdersFoods rename(String name) {
        return new OrdersFoods(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrdersFoods rename(Name name) {
        return new OrdersFoods(name, null);
    }
}
